name: CMake

on:
  # Triggers the workflow on push, PR or manual dispatch
  push:
    branches:
    # Also launch the CI when creating a tag
    tags:
  pull_request:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    name: CMake with default option on the default GitHub Ubuntu
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See:
    # https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    # Pick something which does exist or the runners will wait for
    # ever
    # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Install required packages
        run: |
          sudo apt update
          sudo apt install libboost-all-dev librange-v3-dev

      - name: Configure CMake
        # Configure CMake in a 'build'
        # subdirectory. `CMAKE_BUILD_TYPE` is only required if you are
        # using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run:
          # Create the build directory in ${{github.workspace}}/build
          cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      # Skip the build and test on default GitHub Action with 1 core
      # since the compilation takes too much time and is stopped:
      # c++: fatal error: Killed signal terminated program cc1plus
      # compilation terminated.
      # make[2]: *** [tests/vector/CMakeFiles/vector_cl_types.dir/build.make:76: tests/vector/CMakeFiles/vector_cl_types.dir/cl_types.cpp.o] Error 1
      # make[1]: *** [CMakeFiles/Makefile2:4575: tests/vector/CMakeFiles/vector_cl_types.dir/all] Error 2
      #- name: Build
        # Build your program with the given configuration
      #  run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      #- name: Test
      #  working-directory: ${{github.workspace}}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      #  run: ctest --build-config ${{env.BUILD_TYPE}}

  docker:
    name: Run the validation inside Docker with specific OS and options

    runs-on: ubuntu-latest

    strategy:
      # Run all the test even if there are some which fail
      fail-fast: false

      matrix:
       include:
         - c_compiler: gcc-12
           cxx_compiler: g++-12
           OpenMP: ON
           OpenCL: OFF

         - c_compiler: gcc-12
           cxx_compiler: g++-12
           OpenMP: ON
           OpenCL: ON

         - c_compiler: clang-15
           cxx_compiler: clang++-15
           OpenMP: ON
           OpenCL: OFF

         - c_compiler: clang-15
           cxx_compiler: clang++-15
           OpenMP: ON
           OpenCL: ON

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: ${{ matrix.c_compiler }}, ${{ matrix.cxx_compiler }},
          OpenMP=${{ matrix.OpenMP }}, OpenCL=${{ matrix.OpenCL }}
          in Docker Ubuntu 22.10
        uses: docker://ubuntu:kinetic
        env:
          C_COMPILER: ${{ matrix.c_compiler }}
          CXX_COMPILER: ${{ matrix.cxx_compiler }}
          OPENMP: ${{ matrix.OpenMP }}
          OPENCL: ${{ matrix.OpenCL }}
        with:
          # The workspace is mounted at a different location inside Docker
          entrypoint: /github/workspace/.github/workflows/run_ci_in_docker.bash
